---
import type { HTMLTag, Polymorphic } from 'astro/types'
import type { SignInProps } from "@clerk/types";
type Props<Tag extends HTMLTag = HTMLTag> = Polymorphic<SignInProps & { as: Tag; mode?: 'redirect' | 'modal' }>

import { generateSafeId } from '@clerk/astro/internal';

const safeId = generateSafeId();

const {
  as: Tag = 'button',
  forceRedirectUrl,
  fallbackRedirectUrl,
  signUpFallbackRedirectUrl,
  signUpForceRedirectUrl,
  mode,
  ...elementProps
} = Astro.props

const signInOptions = {
  forceRedirectUrl,
  fallbackRedirectUrl,
  signUpFallbackRedirectUrl,
  signUpForceRedirectUrl,
};
---

<Tag {...elementProps} data-clerk-unstyled-id={'asdasd'}>
  <slot>Sign in</slot>
</Tag >

<script >
import { $clerkStore } from "@clerk/astro/client";
  const btn = document.querySelector(`[data-clerk-unstyled-id="asdasd"]`);

  $clerkStore.subscribe((c) => {
    console.log('c', c)
    c?.redirectToSignIn()
  })
  // btn.addEventListener("click", () => {
  //   const clerk = window.Clerk

  //   if (mode === 'modal') {
  //     return clerk.openSignIn(signInOptions);
  //   }

  //   return clerk.redirectToSignIn({
  //     redirectUrl: '/sign-in'
  //   });
  // });
</script>
