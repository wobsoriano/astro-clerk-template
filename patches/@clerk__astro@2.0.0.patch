diff --git a/dist/index.js b/dist/index.js
index ea65fa6e50c26e32f0def7adfb5889af9d921d00..aeb3a52fe897dd003f06614f68c4a18ceb1d027e 100644
--- a/dist/index.js
+++ b/dist/index.js
@@ -112,6 +112,17 @@ function createIntegration() {
             ${command === "dev" ? `console.log("${name}","Initialize Clerk: page")` : ""}
             import { runInjectionScript, swapDocument } from "${buildImportPath}";
 
+            // Remove param and update URL
+            function removeClerkQueryParam(param) {
+              const url = new URL(window.location.href);
+              if (url.searchParams.has(param)) {
+                url.searchParams.delete(param);
+                window.history.replaceState(window.history.state, '', url);
+              }
+            }
+
+            removeClerkQueryParam('__netlify_clerk_cache_bust')
+
             // Taken from https://github.com/withastro/astro/blob/e10b03e88c22592fbb42d7245b65c4f486ab736d/packages/astro/src/transitions/router.ts#L39.
             // Importing it directly from astro:transitions/client breaks custom client-side routing
             // even when View Transitions is disabled.
diff --git a/dist/server/index.js b/dist/server/index.js
index f65760365c60f46a00bb0949ff8fbaf0e14536db..1685b3b5fd49a835a05ffc925dca648c89a6bc95 100644
--- a/dist/server/index.js
+++ b/dist/server/index.js
@@ -199,8 +199,19 @@ var clerkMiddleware = (...args) => {
       clerkRequest,
       createAuthenticateRequestOptions(clerkRequest, options, context)
     );
+
     const locationHeader = requestState.headers.get(constants3.Headers.Location);
     if (locationHeader) {
+      // Temporary netlify redirect loop workaround
+      // const isHandshakeUrl = locationHeader.includes('client/handshake');
+      // const hasHandshakeQueryParam = locationHeader.includes('__clerk_handshake');
+      // if (!isHandshakeUrl && !hasHandshakeQueryParam) {
+      //   const url = new URL(locationHeader);
+      //   url.searchParams.append('__netlify_clerk_cache_bust', Date.now().toString());
+      //   requestState.headers.set('Location', url.toString());
+      // }
+      
+
       const res = new Response(null, { status: 307, headers: requestState.headers });
       return decorateResponseWithObservabilityHeaders(res, requestState);
     } else if (requestState.status === AuthStatus2.Handshake) {
@@ -226,6 +237,11 @@ var clerkMiddleware = (...args) => {
           response.headers.append(key, value);
         });
       }
+
+      const bustHeader = 'X-CLERK-NETLIFY-CACHE-BUST';
+      response.headers.set(bustHeader, Date.now().toString());
+      response.headers.set('Netlify-Vary', `headers=${bustHeader}`);
+
       return response;
     });
   };
